---
- name: Install docker dependencies
  apt:
    name:
      - aptitude
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
  when: ansible_facts.os_family == 'Debian'

- name: Adding GPG-key for Docker
  apt_key:
    url: https://download.docker.com/linux/{{  ansible_distribution | lower }}/gpg
    state: present
  when: ansible_facts.os_family == 'Debian'

- name:  Docker repo configuration
  apt_repository:
    repo: deb https://download.docker.com/linux/{{  ansible_distribution | lower }} {{ ansible_distribution_release }} stable
    state: present
  when: ansible_facts.os_family == 'Debian'

- name: Repo cache update
  apt:
    update_cache: yes
  when: ansible_facts.os_family == 'Debian'

- name: Docker install
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
  when: ansible_facts.os_family == 'Debian'

- name: Docker CLI plugins directory
  file:
    path: /usr/local/libexec/docker/cli-plugins
    state: directory
    mode: 0755
    recurse: yes
  when: ansible_facts.os_family == 'Debian'

- name: Docker Compose install (via plugin)
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{  docker_compose_version }}/docker-compose-linux-x86_64"
    dest: "/usr/local/libexec/docker/cli-plugins/docker-compose"
    mode: 0755
  when: ansible_facts.os_family == 'Debian'

- name: Docker rights check on docker dir
  stat:
    path: /etc/docker
  register: docker_dir_stat
  when: ansible_facts.os_family == 'Debian'

- name: Create docker group if not exists
  group:
    name: docker
    state: present
  when: ansible_facts.os_family == 'Debian'

- name: Adding current user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes
  when: ansible_facts.os_family == 'Debian'

- name: Docker restart
  service:
    name: docker
    state: restarted
  when: ansible_facts.os_family == 'Debian'
